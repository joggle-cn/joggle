kind: pipeline
type: docker
name: default

steps:
  - name: build
    image: maven:3.8.6-jdk-8-slim
    pull: if-not-exists # 如果镜像不存在则拉取,免去每次都要重新下载
    volumes:
      - name: mavenRep
        path: /root/.m2
    commands:
      - echo ${DRONE_BRANCH}
      - mvn package -DskipTests=true -Dmaven.javadoc.skip=true -U


  - name: scp to prod
    image: appleboy/drone-scp
    pull: if-not-exists # 如果镜像不存在则拉取,免去每次都要重新下载
    environment:
      SSH_KEY_PATH: /root/.ssh/id_rsa
    volumes:
      - name: ssh
        path: /root/.ssh
    settings:
      host: joggle.cn
      username: root
      keyPath: /root/.ssh/id_rsa
      port: 22
      strip_components: 2
      target: /opt/data/springboot/prod/
      source: joggle-server/target/joggle-server.jar
    when:
      branch:
        - prod

  - name: image
    image: plugins/docker
    pull: if-not-exists # 如果镜像不存在则拉取,免去每次都要重新下载
    volumes:
      - name: dockerSock
        path: /var/run/docker.sock
    settings:
      insecure: false
      registry: 192.168.1.6:8082
      mirror: https://dkwe3jow.mirror.aliyuncs.com
      storage_path: /docker
      dockerfile: Dockerfile
      build_args: JAR=./joggle-server/target/joggle-server.jar
      username:
        from_secret: registry_nexus_username
      password:
        from_secret: registry_nexus_password
      repo: 192.168.1.6:8082/wuweiit/joggle-server
      tags:
        - latest
        - ${DRONE_BUILD_NUMBER}
    when:
      branch:
        - dev
        - test
        - prod

  - name: deploy-to-test
    pull: if-not-exists
    image: registry.cn-hangzhou.aliyuncs.com/sanchar/kubectl:v1.20.1
    extra_hosts:
      - lb.kubesphere.local:192.168.1.6
    volumes:
      - name: kube
        path: /root/.kube
    commands:
      - kubectl --kubeconfig /root/.kube/config set image deployment/joggle *='192.168.1.6:8082/wuweiit/joggle-server:${DRONE_BUILD_NUMBER}' -n home
    when:
      branch:
        - dev


#  - name: clean image
#    image: plugins/docker
#    pull: if-not-exists
#    volumes:
#      - name: dockerSock
#        path: /var/run/docker.sock
#    commands:
#      - if [ "${DRONE_BRANCH}" = "dev" ];then docker rmi -f $(docker image ls --filter=reference="192.168.1.6:32588/wuweiit/joggle-server:*" -q); fi
#      - if [ "${DRONE_BRANCH}" = "test" ];then docker rmi -f $(docker image ls --filter=reference="registry.cn-chengdu.aliyuncs.com/paazhi/${DRONE_REPO_NAME}:*" -q); fi
#      - if [ "${DRONE_BRANCH}" = "prod" ];then docker rmi -f $(docker image ls --filter=reference="registry.cn-chengdu.aliyuncs.com/panzhi/${DRONE_REPO_NAME}:*" -q); fi
#    when:
#      branch:
#        - dev
#        - test
#        - prod


volumes:
  - name: ssh
    host:
      path: /root/.ssh
  - name: kube
    host:
      path: /root/.kube
  - name: mavenRep
    host:
      path: /opt/data/drone/.m2
  - name: dockerSock
    host:
      path: /var/run/docker.sock
trigger:
  event:
    include:
      - push
      - custom
  branch:
    - prod
    - test
    - dev